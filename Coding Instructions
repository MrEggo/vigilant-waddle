# Codes to remember!
# These are beginner codes.
print("Whatever you want goes inside these quotations")
you_choose_variable_name=("Integer or string. String is words.")
print(you_choose_variable_name) #Will print what you made you_choose_variable_name say. In this case it will print Integer or string. String is words
# There are also booleans which are True or False which you can assign to a variable.
print(you_choose_variable_name.upper()) #Will make the string you assigned to you_choose_variable_name all uppercase.
print(you_choose_variable_name.lower()) #Will make the string you assigned to you_choose_variable_name all lowercase.
print(you_choose_variable_name.count("t")) #Will see how many times a t appears.
print(you_choose_variable_name.find("String")) #Will  find where the word string is.

# Next we are going to do the replace function.

replace_function= "Replace Function"
replace_function.replace("Function", "Replace")

# Also you can replace with words you have not created. Watch how.

Hello= "Hello World"
Hello_World= Hello.replace("World", "Folks")

# You can also update the variable so you can put words in you have not out in the code yet Watch how!

Hello= "Hello World"
Hello= Hello.replace("World", "Folks")

# Next we will learn how to add variables together.

Hello= "Hello"
Space= " "
Name= "MrEggo"
Greeting= Hello + Space + Name

# Next is another way of adding variables together.

Welcome= "Welcome!"
Question= "How are you?"
Combination_Of_Welcome_And_Question= "{} {}".format(Welcome, Question)

# The way you find out what all the functions do is:
print(help(str))

Next is math.

# Arithmetic Operators:
# Addition:       3 + 2
# Subtraction:    3 - 2
# Multiplication: 3 * 2
# Division:       3 / 2
# Floor Division: 3 // 2
# Exponent:       3 ** 2
# Modulus:        3 % 2


# Comparisons:
# Equal:            3 == 2
# Not Equal:        3 != 2
# Greater Than:     3 > 2
# Less Than:        3 < 2
# Greater or Equal: 3 >= 2
# Less or Equal:    3 <= 2

#Math Coding
num=1
num+= 1
print(num)
num2_0=1
num2_0*=10
print(num2_0)
num3_0=4
num3_0/=2
print(num3_0)
print(abs(-100)) #abs means absolute value.

#If you want to round type

print(round(3.75, 1))
#If we just typed 3.75 it would have rounded to 4. Since we put the comma it rounded up to 3.8.

#Next if we have a variable assigend to "2", that would be a string so how do we turn it into a integer? Watch how.
soon_to_be_int= "2"
soon_to_be_int2= "5"

soon_to_be_int= int(soon_to_be_int)
soon_to_be_int2= int(soon_to_be_int2)

#Next you will be learning an array/list

names= ["Me", "Sister", "Mom", "Grandma", "Cousin1", "Cousin2"] #Arrays start from  0 then go up. So there are 6 things I wrote but the AI will only recognize 5. If I want to print one of these things do this:
print(names[0]) #I wrote 0 but you could have wrote anything 0-5.

#If I wanted to get two things from the list I would do.

print(names[0:3])

#To get anything below something you do:

print(names[:3])

#To get anything above something you do:

print(names[3:])

#To add a thing to a list you do:

names.append("Cousin3")

#To put it in a specific spot you would do:

names.insert(0,"Cousin4") #0 is the spot where it says me. It would make Cousin4 take the spot of Me. You do not have to have 0 as the first argument.

#Next if we want to add another list you do this to our current list:

names_to_remember= ["Her", "Him"] #Just adding another list
names.extend(names_to_remember) #Will add Him and Her to the orriginal list.

#To remove a value you use the remove function

names.remove("Cousin2")

#To reverse the order

names.reverse()

#To sort the list you use the sort function:

names.sort()

#To put this in decending order in the parenthesees you put:

names.sort(reverse=True)

#To get a sorted version without altering the variable you do:

sorted_names= sorted(names)

#If we wanted to do something cool with numbers listen close:
nums= [1,4,9,2,8,6,5,7,3] #You can do all those functions we did with the names list.
print(min(nums)) #Will print the smallest number
print(max(nums)) #Will print largest number
print(sum(nums)) #Will add all the numbers together

#Okay the next thing we will do is learn the index command.

word= ["Hello", "Bye", "Large", "Small"]
print(word.index("Large")) #Will find where the word large is

#To find out if a word is in our list we do:

print("Huge" in word)

#To see the words and the place you use this function(place= 0,1,2 ect)

for index, words in enumerate(word):
  print(index, words)
  
#When we are making the code do the enumerate you can make it start at a certain number

for index, words in enumerate(word, start=1-1): 
  print(index, words)

#If we want to put a comma or something to divide a list you do this:

chicken= ["Chicken Wings", "Chicken Fingers", "Baked Chicken", "Barbeque Chicken"]
chicken_str= ", ".join(chicken)

#To make the list go back to it's original way you do this:

chickenstr2= chicken_str.split(", ")

#Next we will learn tuples. 
#Tuples are things you cannot modify. A tuple looks kind of like this.

tuple1= ("I am not a list", "I am a tuple", "I can not be modifyed", "You can access things just as easy though.", "Lists and tuples are the same things just you can not append, remove and ect with a tuple")

#Next we will learn about sets
#Sets are the same thing as lists just sets have curly brackets and are made to tell you if something is in a set. Also when using a set it might change the order of the way you had things in because sets do not care about order

set= {"Set", "I am a set", "Set", "Curly", "Bracket} #If I were to print this even this it would only type Set out once because if I have something in a set twice it wont print out with a list watch and see!                                                                                                    
print(set)
print("I am a set" in set) #What this will do is tell you if the string is in the code or not.

#Next I am going to show you how to see if you have two lists and want to see if anything is the same in  the set.

day=  {"Language Arts", "Math", "Science", "Tech", "Social Studies"}
summer_day= {"Math", "Tech", "Free time", "Video Games"} #Just making 2 courses now we are making the code to tell us what they both have in common this is only used with sets.
print(day.intersection(summer_day))  #We could make a variable that would be equal to day.intersection(summer_day)

#If we want to see what is in the day set but not the summer day you do this!

print(day.difference(summer_day)) # You can make a variable equal to day.difference(summer_day)

#To combine all of this you use the combine function

print(day.union(summer_day)) #You can make a variable equal to day.union(summer_day)

#What you need to know about empty lists
# Empty Lists
empty_list = []
empty_list = list()

# Empty Tuples
empty_tuple = ()
empty_tuple = tuple()

# Empty Sets
empty_set = {} # This isn't right! It's a dictionaryi
empty_set = set()

#If you want to make a dictionary you do this:

kid= {"Name": "Willy", "Age": 9, "Classes": ["Science", "Math", "Language Arts", "Social Studies"]} #To access a certain thing you do this!
print(kid["Name"]) # This will print your name. 

#If we want to make a default message when something is not in our list you do this:

print(kid.get("Phone")) #Since there is no phone variable this will print None. If you want it to say something besides None you have to add a argument by doing this: 
print(kid.get("Phone", "There is nothing available"))

#If you want to update or create a new value you do this:

kid["Phone"]= "404-879-67789"
print(kid["Phone"])

#If you want to update or add multiple things you should use the update function

kid.update({"Name": "William"})

#If you want to delete something there are two ways to do that. The first way is:

Classes= kid.pop("Classes") #If you were to print Classes it would print your classes. The next was is the del function

#Here is the next way

del kid["Age"]

#To see the keys you do:

print(kid.keys())

#To see the values you do:

print(kid.values())

#To print both keys and values you do:

print(kid.items())

#To loop through both of them you do:

for key, value in kid.items():
  print(key, value)

#Next we will be learning something called booleans!
#The first thing is a conditional:
first_coding_language= "Python"
if first_coding_language == "Python":
  print("My first coding language was Python") #Next is an else statement
else:
  print("My first coding language was something else")

#Next is the Turtle command!
#First you need to import the turtle command

import turtle #Next you need to assign your turtle to a variable
my_turtle = turtle.Turtle() #Now you can do something fun like change the color. Lets do red for fun.
my_turtle.color("Red") #Now lets move it!
my_turtle.forward(100) #Now lets make it go left 90 degress
my_turtle.left(90) #And now lets move forward
my_turtle.forward(100) #Lets turn
my_turtle.left(90) #Lets go straight
my_turtle.forward(100) #Lets turn
my_turtle.left(90) #Lets go straight one last time
my_turtle.forward(100) #Can you guess what shape we made. Enter it in python to find out!

#To make this so you dont have to type it over and over you do this
def square():
  import turtle
  turtle1 = turtle.Turtle()
  turtle1.forward(100) #And if you want to "print" it you do
  turtle1() # Now you can try to make different shapes with the turtle command.

#Now this is a way you can make things easier.
def draw(length, angle):
  import turtle
  turtle2 = turtle.Turtle()
  turtle2.forward(length)
  turtle2.left(angle)
  turtle2.forward(length)
  turtle2.left(angle)
  turtle2.forward(length)
  turtle2.left(angle)
  turtle2.forward(length)
draw(100, 90)













































































































































































































